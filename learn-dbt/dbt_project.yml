
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'nakul_learn_dbt'
version: '1.0.0'
config-version: 2

vars:
    my_first_variable: True 
    my_second_variable: 1

on-run-start:
  - 'create table if not exists audit (model text, state text, time timestamp)'

on-run-end:
  - 'grant usage on warehouse transform_wh to role analytics_role'
  - 'grant usage on database analytics to role analytics_role'
  - 'grant usage on schema analytics.{{ target.schema }} to role analytics_role'
  #- 'grant select on all tables in schema  analytics.dbt to role analytics_role'
  #- 'grant select on all views in schema  analytics.dbt to role analytics_role'

# This setting configures which "profile" dbt uses for this project.
profile: 'learn-dbt-snowflake-db'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  nakul_learn_dbt:
      # Applies to all files under models/example/
      example:
        materialized: table
        pre-hook: "insert into {{ target.schema }}.audit values ('{{this.name}}','starting model deployment', current_timestamp)"
      # Applies to all files under models/new/
      new:
        materialized: view
        pre-hook: "insert into {{ target.schema }}.audit values ('{{this.name}}','starting model deployment', current_timestamp)"